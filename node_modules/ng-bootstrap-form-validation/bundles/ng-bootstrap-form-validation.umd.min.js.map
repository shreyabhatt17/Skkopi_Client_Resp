{"version":3,"sources":["ng://ng-bootstrap-form-validation/lib/Directives/form-validation.directive.ts","ng://ng-bootstrap-form-validation/lib/Enums/BootstrapVersion.ts","ng://ng-bootstrap-form-validation/lib/Tokens/tokens.ts","ng://ng-bootstrap-form-validation/lib/Components/messages/messages.component.ts","ng://ng-bootstrap-form-validation/lib/default-errors.ts","ng://ng-bootstrap-form-validation/lib/Services/error-message.service.ts","ng://ng-bootstrap-form-validation/lib/Components/form-group/form-group.component.ts","null","ng://ng-bootstrap-form-validation/lib/Directives/form-control.directive.ts","ng://ng-bootstrap-form-validation/lib/ng-bootstrap-form-validation.module.ts"],"names":["FormValidationDirective","this","validSubmit","EventEmitter","prototype","onSubmit","markAsTouchedAndDirty","formGroup","valid","emit","value","control","_this","FormGroup","Object","keys","controls","forEach","key","FormArray","c","FormControl","enabled","markAsDirty","markAsTouched","updateValueAndValidity","Directive","args","selector","Input","Output","HostListener","Three","Four","CUSTOM_ERROR_MESSAGES","InjectionToken","BOOTSTRAP_VERSION","MessagesComponent","bootstrapVersion","messages","defineProperty","BootstrapVersion","Component","template","styles","decorators","type","Inject","DEFAULT_ERRORS","error","format","label","requiredLength","max","min","ErrorMessageService","customErrorMessages","errorMessages","reduce","acc","cur","concat","defaultErrors","Injectable","providedIn","FormGroupComponent","elRef","errorMessageService","validationDisabled","getMessages","FormControlNames","some","dirty","touched","ngAfterContentInit","messagesBlock","ngOnInit","reverse","nativeElement","querySelector","textContent","trim","isDirtyAndTouched","names","map","f","name","filter","i","errors","indexOf","find","err","push","ElementRef","ContentChildren","FormControlName","HostBinding","ContentChild","__read","o","n","m","Symbol","iterator","r","e","call","ar","next","done","controlPath","parent","__spread","arguments","length","FormControlDirective","bootstrapFour","invalid","formControlName","formDirective","getControl","ControlContainer","Optional","Host","SkipSelf","NgBootstrapFormValidationModule","forRoot","userOptions","ngModule","providers","provide","useValue","multi","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import {\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  HostListener\n} from \"@angular/core\";\nimport {\n  AbstractControl,\n  FormArray,\n  FormControl,\n  FormGroup\n} from \"@angular/forms\";\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: \"[formGroup]\"\n})\nexport class FormValidationDirective {\n  @Input()\n  formGroup: FormGroup;\n  @Output()\n  validSubmit = new EventEmitter<any>();\n\n  @HostListener(\"submit\")\n  onSubmit() {\n    this.markAsTouchedAndDirty(this.formGroup);\n    if (this.formGroup.valid) {\n      this.validSubmit.emit(this.formGroup.value);\n    }\n  }\n\n  markAsTouchedAndDirty(control: AbstractControl) {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach(key =>\n        this.markAsTouchedAndDirty(control.controls[key])\n      );\n    } else if (control instanceof FormArray) {\n      control.controls.forEach(c => this.markAsTouchedAndDirty(c));\n    } else if (control instanceof FormControl && control.enabled) {\n      control.markAsDirty();\n      control.markAsTouched();\n      control.updateValueAndValidity();\n    }\n  }\n}\n","export enum BootstrapVersion {\n  Three,\n  Four\n}\n","import { InjectionToken } from \"@angular/core\";\nimport { BootstrapVersion } from \"../Enums/BootstrapVersion\";\nimport { ErrorMessage } from \"../Models/error-message\";\n\nexport const CUSTOM_ERROR_MESSAGES = new InjectionToken<ErrorMessage[]>(\n  \"ng-bootstrap-form-validation custom error messages\"\n);\n\nexport const BOOTSTRAP_VERSION = new InjectionToken<BootstrapVersion>(\n  \"ng-bootstrap-form-validation module options\"\n);\n","import { Component, Input, Inject } from \"@angular/core\";\nimport { BootstrapVersion } from \"../../../lib/Enums/BootstrapVersion\";\nimport { BOOTSTRAP_VERSION } from \"../../Tokens/tokens\";\n\n@Component({\n  selector: \"bfv-messages\",\n  template: `\n    <span [ngClass]=\"className\" *ngFor=\"let message of messages()\">{{message}}</span>\n  `,\n  styles: [\n    `\n      .invalid-feedback,\n      .valid-feedback {\n        display: block;\n      }\n    `\n  ]\n})\nexport class MessagesComponent {\n  @Input()\n  public messages = () => [];\n\n  get className() {\n    switch (this.bootstrapVersion) {\n      case BootstrapVersion.Three:\n        return \"help-block\";\n      case BootstrapVersion.Four:\n        return \"invalid-feedback\";\n    }\n  }\n\n  constructor(\n    @Inject(BOOTSTRAP_VERSION) private bootstrapVersion: BootstrapVersion\n  ) {}\n}\n","import { ErrorMessage } from \"./Models/error-message\";\n\nexport const DEFAULT_ERRORS: ErrorMessage[] = [\n  {\n    error: \"required\",\n    format: label => `${label} is required`\n  },\n  {\n    error: \"pattern\",\n    format: label => `${label} is invalid`\n  },\n  {\n    error: \"minlength\",\n    format: (label, error) =>\n      `${label} must be at least ${error.requiredLength} characters`\n  },\n  {\n    error: \"maxlength\",\n    format: (label, error) =>\n      `${label} must be no longer than ${error.requiredLength} characters`\n  },\n  {\n    error: \"requiredTrue\",\n    format: (label, error) => `${label} is required`\n  },\n  {\n    error: \"email\",\n    format: (label, error) => `Invalid email address`\n  },\n  {\n    error: \"max\",\n    format: (label, error) => `${label} must be no greater than ${error.max}`\n  },\n  {\n    error: \"min\",\n    format: (label, error) => `${label} must be no less than ${error.min}`\n  }\n];\n","import { Injectable, Inject } from \"@angular/core\";\nimport { DEFAULT_ERRORS } from \"../default-errors\";\nimport { CUSTOM_ERROR_MESSAGES } from \"../Tokens/tokens\";\nimport { ErrorMessage } from \"../Models/error-message\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ErrorMessageService {\n  private defaultErrors = DEFAULT_ERRORS;\n\n  public errorMessages: ErrorMessage[];\n\n  constructor(\n    @Inject(CUSTOM_ERROR_MESSAGES) public customErrorMessages: ErrorMessage[][]\n  ) {\n    this.errorMessages = customErrorMessages.reduce(\n      (acc, cur) => acc.concat(cur),\n      this.defaultErrors\n    );\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  ContentChild,\n  ElementRef,\n  HostBinding,\n  Input,\n  QueryList,\n  OnInit,\n  AfterContentInit\n} from \"@angular/core\";\nimport { FormControlName } from \"@angular/forms\";\nimport { ErrorMessageService } from \"../../Services/error-message.service\";\nimport { MessagesComponent } from \"../messages/messages.component\";\nimport { ErrorMessage } from \"../../Models/error-message\";\n\n@Component({\n  // tslint:disable:component-selector\n  selector: \".form-group\",\n  template: `\n    <ng-content></ng-content>\n    <bfv-messages *ngIf=\"!messagesBlock\" [messages]=\"messages\"></bfv-messages>\n  `\n})\nexport class FormGroupComponent implements OnInit, AfterContentInit {\n  @ContentChildren(FormControlName)\n  FormControlNames: QueryList<FormControlName>;\n\n  @Input()\n  customErrorMessages: ErrorMessage[] = [];\n\n  @Input()\n  validationDisabled = false;\n\n  @HostBinding(\"class.has-error\")\n  get hasErrors() {\n    return (\n      this.FormControlNames.some(c => !c.valid && c.dirty && c.touched) &&\n      !this.validationDisabled\n    );\n  }\n\n  @HostBinding(\"class.has-success\")\n  get hasSuccess() {\n    return (\n      !this.FormControlNames.some(c => !c.valid) &&\n      this.FormControlNames.some(c => c.dirty && c.touched) &&\n      !this.validationDisabled\n    );\n  }\n\n  @ContentChild(MessagesComponent)\n  public messagesBlock: MessagesComponent;\n\n  private errorMessages: ErrorMessage[];\n\n  public messages = () => this.getMessages();\n\n  constructor(\n    private elRef: ElementRef,\n    private errorMessageService: ErrorMessageService\n  ) {}\n\n  ngAfterContentInit() {\n    if (this.messagesBlock) {\n      this.messagesBlock.messages = this.messages;\n    }\n  }\n\n  ngOnInit() {\n    this.errorMessages = this.errorMessageService.errorMessages\n      .concat(this.customErrorMessages)\n      .reverse();\n  }\n\n  get label() {\n    const label = this.elRef.nativeElement.querySelector(\"label\");\n    return label && label.textContent ? label.textContent.trim() : \"This field\";\n  }\n\n  get isDirtyAndTouched() {\n    return this.FormControlNames.some(c => c.dirty && c.touched);\n  }\n\n  private getMessages(): string[] {\n    const messages = [];\n    if (!this.isDirtyAndTouched || this.validationDisabled) {\n      return messages;\n    }\n\n    const names = this.FormControlNames.map(f => f.name);\n\n    this.FormControlNames.filter(\n      (c, i) =>\n        !c.valid &&\n        !!c.errors &&\n        // filter out FormControlNames that share the same name - usually for radio buttons\n        names.indexOf(c.name) === i\n    ).forEach(control => {\n      Object.keys(control.errors).forEach(key => {\n        const error = this.errorMessages.find(err => err.error === key);\n        if (!error) {\n          return;\n        }\n        messages.push(error.format(this.label, control.errors[key]));\n      });\n    });\n\n    return messages;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  Directive,\n  Input,\n  HostBinding,\n  Optional,\n  Host,\n  SkipSelf,\n  Inject\n} from \"@angular/core\";\nimport { ControlContainer, FormControl } from \"@angular/forms\";\nimport { BootstrapVersion } from \"../Enums/BootstrapVersion\";\nimport { BOOTSTRAP_VERSION } from \"../Tokens/tokens\";\n\nexport function controlPath(name: string, parent: ControlContainer): string[] {\n  // tslint:disable-next-line:no-non-null-assertion\n  return [...parent.path!, name];\n}\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: \".form-control,.form-check-input,.custom-control-input\"\n})\nexport class FormControlDirective {\n  @Input()\n  formControlName: string;\n  @Input()\n  formControl: string;\n\n  @HostBinding(\"class.is-valid\")\n  get validClass() {\n    if (!this.control) {\n      return false;\n    }\n    return (\n      this.bootstrapFour &&\n      this.control.valid &&\n      (this.control.touched || this.control.dirty)\n    );\n  }\n\n  @HostBinding(\"class.is-invalid\")\n  get invalidClass() {\n    if (!this.control) {\n      return false;\n    }\n    return (\n      this.bootstrapFour &&\n      this.control.invalid &&\n      this.control.touched &&\n      this.control.dirty\n    );\n  }\n\n  get path() {\n    return controlPath(this.formControlName, this.parent);\n  }\n\n  get control(): FormControl {\n    return this.formDirective && this.formDirective.getControl(this);\n  }\n\n  get formDirective(): any {\n    return this.parent ? this.parent.formDirective : null;\n  }\n\n  get bootstrapFour() {\n    return this.bootstrapVersion === BootstrapVersion.Four;\n  }\n\n  constructor(\n    // this value might be null, but we union type it as such until\n    // this issue is resolved: https://github.com/angular/angular/issues/25544\n    @Optional()\n    @Host()\n    @SkipSelf()\n    private parent: ControlContainer,\n    @Inject(BOOTSTRAP_VERSION) private bootstrapVersion: BootstrapVersion\n  ) {}\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { FormValidationDirective } from \"./Directives/form-validation.directive\";\nimport { MessagesComponent } from \"./Components/messages/messages.component\";\nimport { ErrorMessageService } from \"./Services/error-message.service\";\nimport { CUSTOM_ERROR_MESSAGES, BOOTSTRAP_VERSION } from \"./Tokens/tokens\";\nimport { BootstrapVersion } from \"./Enums/BootstrapVersion\";\nimport { FormGroupComponent } from \"./Components/form-group/form-group.component\";\nimport { NgBootstrapFormValidationModuleOptions } from \"./Models/NgBootstrapFormValidationModuleOptions\";\nimport { FormControlDirective } from \"./Directives/form-control.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    FormValidationDirective,\n    FormGroupComponent,\n    MessagesComponent,\n    FormControlDirective\n  ],\n  exports: [\n    FormValidationDirective,\n    FormGroupComponent,\n    MessagesComponent,\n    FormControlDirective\n  ]\n})\nexport class NgBootstrapFormValidationModule {\n  static forRoot(\n    userOptions: NgBootstrapFormValidationModuleOptions = {\n      bootstrapVersion: BootstrapVersion.Four\n    }\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgBootstrapFormValidationModule,\n      providers: [\n        {\n          provide: CUSTOM_ERROR_MESSAGES,\n          useValue: userOptions.customErrorMessages || [],\n          multi: true\n        },\n        {\n          provide: BOOTSTRAP_VERSION,\n          useValue: userOptions.bootstrapVersion\n        },\n        ErrorMessageService\n      ]\n    };\n  }\n}\n"]}