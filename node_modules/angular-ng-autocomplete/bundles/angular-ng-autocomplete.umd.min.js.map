{"version":3,"sources":["ng://angular-ng-autocomplete/lib/autocomplete-lib.service.ts","ng://angular-ng-autocomplete/lib/autocomplete-lib.component.ts","null","ng://angular-ng-autocomplete/lib/autocomplete/autocomplete.component.ts","ng://angular-ng-autocomplete/lib/autocomplete-lib.module.ts"],"names":["AutocompleteLibService","Injectable","args","providedIn","AutocompleteLibComponent","prototype","ngOnInit","Component","selector","template","styles","__assign","Object","assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","isArrowUpDown","keyCode","isEnter","isESC","AutocompleteComponent","elementRef","renderer","undefined","EventEmitter","writeValue","query","registerOnChange","fn","propagateChange","registerOnTouched","onChange","event","target","handleScroll","initEventStream","setInitialValue","initialValue","select","ngOnChanges","changes","Array","isArray","currentValue","handleItemsChange","firstChange","isFocused","handleOpen","isScrollToEnd","isOpen","filteredList","data","filterList","selectedIdx","initSearchHistory","toHighlight","filter","item","toLowerCase","indexOf","_this","constructor","searchKeyword","notFound","isType","selected","emit","window","localStorage","getItem","historyIdentifier","existingHistory","JSON","parse","some","existingItem","copiedExistingHistory","slice","splice","setItem","stringify","selectedIndex","map","el","unshift","historyListMaxNumber","saveHistory","handleClose","handleClick","clickedComponent","inside","nativeElement","parentNode","listen","filteredListElement","scrollToEnd","setPanelState","stopPropagation","manualOpen","manualClose","open","close","focus","handleFocus","clear","remove","inputCleared","isHistoryListVisible","history_2","historyList","isLoading","opened","closed","inputFocused","scrollTop","scrollHeight","clientHeight","scrolledToEnd","inputKeyUp$","fromEvent","searchInput","pipe","inputKeyDown$","listenEventStream","debounceTime","subscribe","onKeyUp","preventDefault","onFocusItem","onHandleEnter","onEsc","onDelete","inputChanged","minQueryLength","notFoundText","totalNumItem","code","sum","scrollToFocusedItem","index","listElement","historyListElement","items","childNodes","node","nodeType","className","includes","listHeight","offsetHeight","itemHeight","visibleTop","visibleBottom","targetPosition","offsetTop","blur","copiedHistoryList","saveHistoryToLocalStorage","removeHistoryItem","v","removeItem","resetHistoryList","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","encapsulation","ViewEncapsulation","None","host","(document:click)","class","ElementRef","Renderer2","ViewChild","Input","Output","ContentChild","TemplateRef","type","HighlightPipe","transform","text","search","pattern","replace","split","join","regex","RegExp","name_1","match","text2","Pipe","name","AutocompleteLibModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutocompleteLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-autocomplete-lib',\n  template: `\n    <p>\n      autocomplete-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class AutocompleteLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  Component, ContentChild,\n  ElementRef,\n  EventEmitter, forwardRef,\n  Input, OnChanges,\n  OnInit,\n  Output,\n  Pipe,\n  PipeTransform, Renderer2,\n  SimpleChanges, TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {fromEvent, Observable} from 'rxjs';\nimport {debounceTime, filter, map} from 'rxjs/operators';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * Keyboard events\n */\nconst isArrowUp = keyCode => keyCode === 38;\nconst isArrowDown = keyCode => keyCode === 40;\nconst isArrowUpDown = keyCode => isArrowUp(keyCode) || isArrowDown(keyCode);\nconst isEnter = keyCode => keyCode === 13;\nconst isBackspace = keyCode => keyCode === 8;\nconst isDelete = keyCode => keyCode === 46;\nconst isESC = keyCode => keyCode === 27;\nconst isTab = keyCode => keyCode === 9;\n\n\n@Component({\n  selector: 'ng-autocomplete',\n  template: `<div class=\"autocomplete-container\">\n  <div class=\"input-container\">\n    <input #searchInput type=\"text\" placeholder={{placeHolder}}\n           [(ngModel)]=query\n           (input)=\"onChange($event)\"\n           (focus)=handleFocus($event)>\n    <div class=\"x\" *ngIf=\"query && !isLoading\" (click)=\"remove($event)\">\n      <i class=\"material-icons\">close</i>\n    </div>\n    <!--Loading mask-->\n    <div class=\"sk-fading-circle\" *ngIf=\"isLoading\">\n      <div class=\"sk-circle1 sk-circle\"></div>\n      <div class=\"sk-circle2 sk-circle\"></div>\n      <div class=\"sk-circle3 sk-circle\"></div>\n      <div class=\"sk-circle4 sk-circle\"></div>\n      <div class=\"sk-circle5 sk-circle\"></div>\n      <div class=\"sk-circle6 sk-circle\"></div>\n      <div class=\"sk-circle7 sk-circle\"></div>\n      <div class=\"sk-circle8 sk-circle\"></div>\n      <div class=\"sk-circle9 sk-circle\"></div>\n      <div class=\"sk-circle10 sk-circle\"></div>\n      <div class=\"sk-circle11 sk-circle\"></div>\n      <div class=\"sk-circle12 sk-circle\"></div>\n    </div>\n  </div>\n\n  <!--FilteredList items-->\n  <div class=\"suggestions-container\"\n       [ngClass]=\"{ 'is-hidden': isHistoryListVisible, 'is-visible': !isHistoryListVisible}\">\n    <ul #filteredListElement>\n      <li *ngFor=\"let item of filteredList; let idx = index\" class=\"item\">\n        <!--string logic-->\n        <div [class.complete-selected]=\"idx === selectedIdx\" *ngIf='isType(item)'\n             (click)=\"select(item)\">\n          <ng-container\n            *ngTemplateOutlet=\"itemTemplate;  context: { $implicit: item | highlight: toHighlight }\">\n          </ng-container>\n        </div>\n        <!--object logic-->\n        <div [class.complete-selected]=\"idx === selectedIdx\" *ngIf='!isType(item)'\n             (click)=\"select(item)\">\n          <ng-container\n            *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item | highlight: toHighlight : searchKeyword }\">\n          </ng-container>\n        </div>\n\n      </li>\n    </ul>\n  </div>\n\n  <!--HistoryList items-->\n  <div class=\"suggestions-container\"\n       [ngClass]=\"{ 'is-hidden': !isHistoryListVisible, 'is-visible': isHistoryListVisible}\">\n    <!--HistoryList heading-->\n    <div class=\"history-heading\" *ngIf=\"historyList.length > 0 && historyHeading\">\n      <div class=\"text\">{{historyHeading}}</div>\n      <div class=\"x\" (click)=\"resetHistoryList($event)\">\n        <i class=\"material-icons\">delete</i>\n      </div>\n    </div>\n\n    <ul #historyListElement>\n      <li *ngFor=\"let item of historyList; let idx = index\" class=\"item\">\n        <!--string logic-->\n        <div [class.complete-selected]=\"idx === selectedIdx\" *ngIf='isType(item)' (click)=\"select(item)\">\n          <ng-container\n            *ngTemplateOutlet=\"itemTemplate;  context: { $implicit: item }\">\n          </ng-container>\n        </div>\n        <!--object logic-->\n        <div [class.complete-selected]=\"idx === selectedIdx\" *ngIf='!isType(item)' (click)=\"select(item)\">\n          <ng-container\n            *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\">\n          </ng-container>\n        </div>\n        <div class=\"x\" (click)=\"removeHistoryItem(idx, $event)\">\n          <i class=\"material-icons\">close</i>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <!--Not found-->\n  <div class=\"not-found\" *ngIf=\"isLoading ? !isLoading && notFound : notFound\">\n    <ng-container\n      *ngTemplateOutlet=\"notFoundTemplate;  context: { $implicit: notFoundText  }\">\n    </ng-container>\n  </div>\n</div>\n`,\n  styles: [`@import url(https://fonts.googleapis.com/icon?family=Material+Icons);.ng-autocomplete{width:600px}.autocomplete-container{box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);position:relative;overflow:visible;height:40px}.autocomplete-container .input-container input{font-size:14px;box-sizing:border-box;border:none;box-shadow:none;outline:0;background-color:#fff;color:rgba(0,0,0,.87);width:100%;padding:0 15px;line-height:40px;height:40px}.autocomplete-container .input-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.autocomplete-container .input-container .x i{color:rgba(0,0,0,.54);font-size:22px;vertical-align:middle}.autocomplete-container .suggestions-container{position:absolute;width:100%;background:#fff;height:auto;box-shadow:0 2px 5px rgba(0,0,0,.25);box-sizing:border-box}.autocomplete-container .suggestions-container ul{padding:0;margin:0;max-height:240px;overflow-y:auto}.autocomplete-container .suggestions-container ul li{position:relative;list-style:none;padding:0;margin:0;cursor:pointer}.autocomplete-container .suggestions-container ul li a{padding:14px 15px;display:block;text-decoration:none;cursor:pointer;color:rgba(0,0,0,.87);font-size:15px}.autocomplete-container .suggestions-container .complete-selected,.autocomplete-container .suggestions-container ul li:hover{background-color:rgba(158,158,158,.18)}.autocomplete-container .suggestions-container .history-heading{position:relative;padding:10px 15px;border:1px solid #f1f1f1}.autocomplete-container .suggestions-container .history-heading .text{font-size:.85em}.autocomplete-container .suggestions-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.autocomplete-container .suggestions-container .x i{color:rgba(0,0,0,.54);font-size:18px;vertical-align:middle}.autocomplete-container .suggestions-container.is-hidden{visibility:hidden}.autocomplete-container .suggestions-container.is-visible{visibility:visible}.autocomplete-container .not-found{padding:0 .75em;border:1px solid #f1f1f1;background:#fff}.autocomplete-container .not-found div{padding:.4em 0;font-size:.95em;line-height:1.4;border-bottom:1px solid rgba(230,230,230,.7)}.highlight{font-weight:700}.sk-fading-circle{width:20px;height:20px;position:absolute;right:10px;top:0;bottom:0;margin:auto}.sk-fading-circle .sk-circle{width:100%;height:100%;position:absolute;left:0;top:0}.sk-fading-circle .sk-circle:before{content:'';display:block;margin:0 auto;width:15%;height:15%;background-color:#333;border-radius:100%;-webkit-animation:1.2s ease-in-out infinite both sk-circleFadeDelay;animation:1.2s ease-in-out infinite both sk-circleFadeDelay}.sk-fading-circle .sk-circle2{-webkit-transform:rotate(30deg);transform:rotate(30deg)}.sk-fading-circle .sk-circle3{-webkit-transform:rotate(60deg);transform:rotate(60deg)}.sk-fading-circle .sk-circle4{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.sk-fading-circle .sk-circle5{-webkit-transform:rotate(120deg);transform:rotate(120deg)}.sk-fading-circle .sk-circle6{-webkit-transform:rotate(150deg);transform:rotate(150deg)}.sk-fading-circle .sk-circle7{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.sk-fading-circle .sk-circle8{-webkit-transform:rotate(210deg);transform:rotate(210deg)}.sk-fading-circle .sk-circle9{-webkit-transform:rotate(240deg);transform:rotate(240deg)}.sk-fading-circle .sk-circle10{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.sk-fading-circle .sk-circle11{-webkit-transform:rotate(300deg);transform:rotate(300deg)}.sk-fading-circle .sk-circle12{-webkit-transform:rotate(330deg);transform:rotate(330deg)}.sk-fading-circle .sk-circle2:before{-webkit-animation-delay:-1.1s;animation-delay:-1.1s}.sk-fading-circle .sk-circle3:before{-webkit-animation-delay:-1s;animation-delay:-1s}.sk-fading-circle .sk-circle4:before{-webkit-animation-delay:-.9s;animation-delay:-.9s}.sk-fading-circle .sk-circle5:before{-webkit-animation-delay:-.8s;animation-delay:-.8s}.sk-fading-circle .sk-circle6:before{-webkit-animation-delay:-.7s;animation-delay:-.7s}.sk-fading-circle .sk-circle7:before{-webkit-animation-delay:-.6s;animation-delay:-.6s}.sk-fading-circle .sk-circle8:before{-webkit-animation-delay:-.5s;animation-delay:-.5s}.sk-fading-circle .sk-circle9:before{-webkit-animation-delay:-.4s;animation-delay:-.4s}.sk-fading-circle .sk-circle10:before{-webkit-animation-delay:-.3s;animation-delay:-.3s}.sk-fading-circle .sk-circle11:before{-webkit-animation-delay:-.2s;animation-delay:-.2s}.sk-fading-circle .sk-circle12:before{-webkit-animation-delay:-.1s;animation-delay:-.1s}@-webkit-keyframes sk-circleFadeDelay{0%,100%,39%{opacity:0}40%{opacity:1}}@keyframes sk-circleFadeDelay{0%,100%,39%{opacity:0}40%{opacity:1}}`],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AutocompleteComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '(document:click)': 'handleClick($event)',\n    'class': 'ng-autocomplete'\n  },\n})\n\nexport class AutocompleteComponent implements OnInit, OnChanges, ControlValueAccessor {\n  @ViewChild('searchInput') searchInput: ElementRef; // input element\n  @ViewChild('filteredListElement') filteredListElement: ElementRef; // element of items\n  @ViewChild('historyListElement') historyListElement: ElementRef; // element of history items\n\n  inputKeyUp$: Observable<any>; // input events\n  inputKeyDown$: Observable<any>; // input events\n\n  public query = ''; // search query\n  public filteredList = []; // list of items\n  public historyList = []; // list of history items\n  public isHistoryListVisible = true;\n  public elementRef;\n  public selectedIdx = -1;\n  public toHighlight: string = '';\n  public notFound = false;\n  public isFocused = false;\n  public isOpen = false;\n  public isScrollToEnd = false;\n  private manualOpen = undefined;\n  private manualClose = undefined;\n\n\n  // inputs\n  /**\n   * Data of items list.\n   * It can be array of strings or array of objects.\n   */\n  @Input() public data = [];\n  @Input() public searchKeyword: string; // keyword to filter the list\n  @Input() public placeHolder = ''; // input placeholder\n  @Input() public initialValue: any; // set initial value\n  /**\n   * History identifier of history list\n   * When valid history identifier is given, then component stores selected item to local storage of user's browser.\n   * If it is null then history is hidden.\n   * History list is visible if at least one history item is stored.\n   */\n  @Input() public historyIdentifier: String;\n  /**\n   * Heading text of history list.\n   * If it is null then history heading is hidden.\n   */\n  @Input() public historyHeading = 'Recently selected';\n  @Input() public historyListMaxNumber = 15; // maximum number of items in the history list.\n  @Input() public notFoundText = 'Not found'; // set custom text when filter returns empty result\n  @Input() public isLoading: Boolean; // loading mask\n  @Input() public debounceTime: 400; // delay time while typing\n  /**\n   * The minimum number of characters the user must type before a search is performed.\n   */\n  @Input() public minQueryLength = 1;\n\n\n  // output events\n  /** Event that is emitted whenever an item from the list is selected. */\n  @Output() selected = new EventEmitter<any>();\n\n  /** Event that is emitted whenever an input is changed. */\n  @Output() inputChanged = new EventEmitter<any>();\n\n  /** Event that is emitted whenever an input is focused. */\n  @Output() readonly inputFocused: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted whenever an input is cleared. */\n  @Output() readonly inputCleared: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is opened. */\n  @Output() readonly opened: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is closed. */\n  @Output() readonly closed: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when scrolled to the end of items. */\n  @Output() readonly scrolledToEnd: EventEmitter<void> = new EventEmitter<void>();\n\n\n  // custom templates\n  @ContentChild(TemplateRef)\n  @Input() itemTemplate: TemplateRef<any>;\n  @Input() notFoundTemplate: TemplateRef<any>;\n\n  /**\n   * Propagates new value when model changes\n   */\n  propagateChange: any = () => {\n  };\n\n\n  /**\n   * Writes a new value from the form model into the view,\n   * Updates model\n   */\n  writeValue(value: any) {\n    if (value) {\n      this.query = value;\n    }\n  }\n\n  /**\n   * Registers a handler that is called when something in the view has changed\n   */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a handler specifically for when a control receives a touch event\n   */\n  registerOnTouched(fn: () => void): void {\n  }\n\n  /**\n   * Event that is called when the value of an input element is changed\n   */\n  onChange(event) {\n    this.propagateChange(event.target.value);\n  }\n\n  constructor(elementRef: ElementRef, private renderer: Renderer2) {\n    this.elementRef = elementRef;\n  }\n\n  ngOnInit() {\n    this.handleScroll();\n    this.initEventStream();\n    this.setInitialValue(this.initialValue);\n  }\n\n  /**\n   * Set initial value\n   * @param value\n   */\n  public setInitialValue(value: any) {\n    if (this.initialValue) {\n      this.select(value);\n    }\n  }\n\n  /**\n   * Update search results\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes &&\n      changes.data &&\n      Array.isArray(changes.data.currentValue)\n    ) {\n      this.handleItemsChange();\n      if (!changes.data.firstChange && this.isFocused) {\n        this.handleOpen();\n      }\n    }\n  }\n\n  /**\n   * Items change\n   */\n  public handleItemsChange() {\n    this.isScrollToEnd = false;\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.filteredList = this.data;\n  }\n\n  /**\n   * Filter data\n   */\n  public filterList() {\n    this.selectedIdx = -1;\n    this.initSearchHistory();\n    if (this.query != null && this.data) {\n      this.toHighlight = this.query;\n      this.filteredList = this.data.filter((item: any) => {\n        if (typeof item === 'string') {\n          // string logic, check equality of strings\n          return item.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n        } else if (typeof item === 'object' && item.constructor === Object) {\n          // object logic, check property equality\n          return item[this.searchKeyword].toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n        }\n      });\n    } else {\n      this.notFound = false;\n    }\n  }\n\n\n  /**\n   * Check type of item in the list.\n   * @param item\n   */\n  isType(item) {\n    return typeof item === 'string';\n  }\n\n  /**\n   * Select item in the list.\n   * @param item\n   */\n  public select(item) {\n    this.query = !this.isType(item) ? item[this.searchKeyword] : item;\n    this.isOpen = true;\n    this.selected.emit(item);\n    this.propagateChange(item);\n\n    if (this.initialValue) {\n      // check if history already exists in localStorage and then update\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n      if (history) {\n        let existingHistory = JSON.parse(localStorage[`${this.historyIdentifier}`]);\n        if (!(existingHistory instanceof Array)) existingHistory = [];\n\n        // check if selected item exists in existingHistory\n        if (!existingHistory.some((existingItem) => !this.isType(existingItem)\n          ? existingItem[this.searchKeyword] == item[this.searchKeyword] : existingItem == item)) {\n          existingHistory.unshift(item);\n          localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n\n          // check if items don't exceed max allowed number\n          if (existingHistory.length >= this.historyListMaxNumber) {\n            existingHistory.splice(existingHistory.length - 1, 1);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n          }\n        } else {\n          // if selected item exists in existingHistory swap to top in array\n          if (!this.isType(item)) {\n            // object logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n            const selectedIndex = copiedExistingHistory.map((el) => el[this.searchKeyword]).indexOf(item[this.searchKeyword]);\n            copiedExistingHistory.splice(selectedIndex, 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          } else {\n            // string logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n            copiedExistingHistory.splice(copiedExistingHistory.indexOf(item), 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          }\n        }\n      } else {\n        this.saveHistory(item);\n      }\n    } else {\n      this.saveHistory(item);\n    }\n    this.handleClose();\n  }\n\n  /**\n   * Document click\n   * @param e event\n   */\n  public handleClick(e) {\n    let clickedComponent = e.target;\n    let inside = false;\n    do {\n      if (clickedComponent === this.elementRef.nativeElement) {\n        inside = true;\n        if (this.filteredList.length) {\n          this.handleOpen();\n        }\n      }\n      clickedComponent = clickedComponent.parentNode;\n    } while (clickedComponent);\n    if (!inside) {\n      this.handleClose();\n    }\n  }\n\n  /**\n   * Scroll items\n   */\n  public handleScroll() {\n    this.renderer.listen(this.filteredListElement.nativeElement, 'scroll', () => {\n      this.scrollToEnd();\n    });\n  }\n\n  /**\n   * Define panel state\n   */\n  setPanelState(event) {\n    if (event) {\n      event.stopPropagation();\n    }\n    // If controls are untouched\n    if (typeof this.manualOpen === 'undefined'\n      && typeof this.manualClose === 'undefined') {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // If one of the controls is untouched and other is deactivated\n    if (typeof this.manualOpen === 'undefined'\n      && this.manualClose === false\n      || typeof this.manualClose === 'undefined'\n      && this.manualOpen === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // if controls are touched but both are deactivated\n    if (this.manualOpen === false && this.manualClose === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // if open control is touched and activated\n    if (this.manualOpen) {\n      this.isOpen = false;\n      this.handleOpen();\n      this.manualOpen = false;\n    }\n\n    // if close control is touched and activated\n    if (this.manualClose) {\n      this.isOpen = true;\n      this.handleClose();\n      this.manualClose = false;\n    }\n  }\n\n  /**\n   * Manual controls\n   */\n  open() {\n    this.manualOpen = true;\n    this.isOpen = false;\n    this.handleOpen();\n  }\n\n  close() {\n    this.manualClose = true;\n    this.isOpen = true;\n    this.handleClose();\n  }\n\n  focus() {\n    this.handleFocus(event);\n  }\n\n  clear() {\n    this.remove(event);\n  }\n\n  /**\n   * Remove search query\n   */\n  public remove(e) {\n    e.stopPropagation();\n    this.query = '';\n    this.inputCleared.emit();\n    this.propagateChange(this.query);\n    this.setPanelState(e);\n  }\n\n  /**\n   * Initialize historyList search\n   */\n  initSearchHistory() {\n    this.isHistoryListVisible = false;\n    if (this.historyIdentifier && !this.query) {\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n      if (history) {\n        this.isHistoryListVisible = true;\n        this.filteredList = [];\n        this.historyList = history ? JSON.parse(history) : [];\n      } else {\n        this.isHistoryListVisible = false;\n      }\n    } else {\n      this.isHistoryListVisible = false;\n    }\n  }\n\n  handleOpen() {\n    if (this.isOpen || this.isOpen && !this.isLoading) {\n      return;\n    }\n    // If data exists\n    if (this.data && this.data.length) {\n      this.isOpen = true;\n      this.filterList();\n      this.opened.emit();\n    }\n  }\n\n  handleClose() {\n    if (!this.isOpen) {\n      this.isFocused = false;\n      return;\n    }\n    this.isOpen = false;\n    this.filteredList = [];\n    this.selectedIdx = -1;\n    this.notFound = false;\n    this.isHistoryListVisible = false;\n    this.isFocused = false;\n    this.closed.emit();\n  }\n\n  handleFocus(e) {\n    //this.searchInput.nativeElement.focus();\n    if (this.isFocused) {\n      return;\n    }\n    this.inputFocused.emit(e);\n    // if data exists then open\n    if (this.data && this.data.length) {\n      this.setPanelState(event);\n    }\n    this.isFocused = true;\n  }\n\n  scrollToEnd(): void {\n    if (this.isScrollToEnd) {\n      return;\n    }\n\n    const scrollTop = this.filteredListElement.nativeElement\n      .scrollTop;\n    const scrollHeight = this.filteredListElement.nativeElement\n      .scrollHeight;\n    const elementHeight = this.filteredListElement.nativeElement\n      .clientHeight;\n    const atBottom = scrollHeight === scrollTop + elementHeight;\n    if (atBottom) {\n      this.scrolledToEnd.emit();\n      this.isScrollToEnd = true;\n    }\n  }\n\n  /**\n   * Initialize keyboard events\n   */\n  initEventStream() {\n    this.inputKeyUp$ = fromEvent(\n      this.searchInput.nativeElement, 'keyup'\n    ).pipe(map(\n      (e: any) => e\n    ));\n\n    this.inputKeyDown$ = fromEvent(\n      this.searchInput.nativeElement,\n      'keydown'\n    ).pipe(map(\n      (e: any) => e\n    ));\n\n    this.listenEventStream();\n  }\n\n  /**\n   * Listen keyboard events\n   */\n  listenEventStream() {\n    // key up event\n    this.inputKeyUp$\n      .pipe(\n        filter(e =>\n          !isArrowUpDown(e.keyCode) &&\n          !isEnter(e.keyCode) &&\n          !isESC(e.keyCode) &&\n          !isTab(e.keyCode)),\n        debounceTime(this.debounceTime)\n      ).subscribe(e => {\n      this.onKeyUp(e);\n    });\n\n    // cursor up & down\n    this.inputKeyDown$.pipe(filter(\n      e => isArrowUpDown(e.keyCode)\n    )).subscribe(e => {\n      e.preventDefault();\n      this.onFocusItem(e);\n    });\n\n    // enter keyup\n    this.inputKeyUp$.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n      //this.onHandleEnter();\n    });\n\n    // enter keydown\n    this.inputKeyDown$.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n      this.onHandleEnter();\n    });\n\n    // ESC\n    this.inputKeyUp$.pipe(\n      filter(e => isESC(e.keyCode),\n        debounceTime(100))\n    ).subscribe(e => {\n      this.onEsc();\n    });\n\n    // delete\n    this.inputKeyDown$.pipe(\n      filter(e => isBackspace(e.keyCode) || isDelete(e.keyCode))\n    ).subscribe(e => {\n      this.onDelete();\n    });\n  }\n\n  /**\n   * on keyup == when input changed\n   * @param e event\n   */\n  onKeyUp(e) {\n    this.notFound = false; // search results are unknown while typing\n    // if input is empty\n    if (!this.query) {\n      this.notFound = false;\n      this.inputChanged.emit(e.target.value);\n      this.inputCleared.emit();\n      //this.filterList();\n      this.setPanelState(e);\n    }\n    // if query >= to minQueryLength\n    if (this.query.length >= this.minQueryLength) {\n      this.inputChanged.emit(e.target.value);\n      this.filterList();\n\n      // If no results found\n      if (!this.filteredList.length) {\n        this.notFoundText ? this.notFound = true : this.notFound = false;\n      }\n    }\n  }\n\n\n  /**\n   * Keyboard arrow top and arrow bottom\n   * @param e event\n   */\n  onFocusItem(e) {\n    // move arrow up and down on filteredList or historyList\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList\n      const totalNumItem = this.filteredList.length;\n      if (e.code === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = (this.selectedIdx === null) ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.code === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    } else {\n      // historyList\n      const totalNumItem = this.historyList.length;\n      if (e.code === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = (this.selectedIdx === null) ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.code === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    }\n  }\n\n  /**\n   * Scroll to focused item\n   * * @param index\n   */\n  scrollToFocusedItem(index) {\n    let listElement = null;\n    // Define list element\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList element\n      listElement = this.filteredListElement.nativeElement;\n    } else {\n      // historyList element\n      listElement = this.historyListElement.nativeElement;\n    }\n\n    const items = Array.prototype.slice.call(listElement.childNodes).filter((node: any) => {\n      if (node.nodeType === 1) {\n        // if node is element\n        return node.className.includes('item');\n      } else {\n        return false;\n      }\n    });\n\n    if (!items.length) {\n      return;\n    }\n\n    const listHeight = listElement.offsetHeight;\n    const itemHeight = items[index].offsetHeight;\n    const visibleTop = listElement.scrollTop;\n    const visibleBottom = listElement.scrollTop + listHeight - itemHeight;\n    const targetPosition = items[index].offsetTop;\n\n    if (targetPosition < visibleTop) {\n      listElement.scrollTop = targetPosition;\n    }\n\n    if (targetPosition > visibleBottom) {\n      listElement.scrollTop = targetPosition - listHeight + itemHeight;\n    }\n  }\n\n  /**\n   * Select item on enter click\n   */\n  onHandleEnter() {\n    // click enter to choose item from filteredList or historyList\n    if (this.selectedIdx > -1) {\n      if (!this.historyList.length || !this.isHistoryListVisible) {\n        // filteredList\n        this.query = !this.isType(this.filteredList[this.selectedIdx])\n          ? this.filteredList[this.selectedIdx][this.searchKeyword]\n          : this.filteredList[this.selectedIdx];\n\n        this.saveHistory(this.filteredList[this.selectedIdx]);\n        this.select(this.filteredList[this.selectedIdx]);\n      } else {\n        // historyList\n        this.query = !this.isType(this.historyList[this.selectedIdx])\n          ? this.historyList[this.selectedIdx][this.searchKeyword]\n          : this.historyList[this.selectedIdx];\n        this.saveHistory(this.historyList[this.selectedIdx]);\n        this.select(this.historyList[this.selectedIdx]);\n      }\n    }\n    this.isHistoryListVisible = false;\n    this.handleClose();\n  }\n\n  /**\n   * Esc click\n   */\n  onEsc() {\n    this.searchInput.nativeElement.blur();\n    this.handleClose();\n  }\n\n  /**\n   * Delete click\n   */\n  onDelete() {\n    // panel is open on delete\n    this.isOpen = true;\n  }\n\n\n  /**\n   * Select item to save in localStorage\n   * @param selected\n   */\n  saveHistory(selected) {\n    if (this.historyIdentifier) {\n      // check if selected item exists in historyList\n      if (!this.historyList.some((item) => !this.isType(item)\n        ? item[this.searchKeyword] == selected[this.searchKeyword] : item == selected)) {\n        this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n\n        // check if items don't exceed max allowed number\n        if (this.historyList.length >= this.historyListMaxNumber) {\n          this.historyList.splice(this.historyList.length - 1, 1);\n          this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n        }\n      } else {\n        // if selected item exists in historyList swap to top in array\n        if (!this.isType(selected)) {\n          // object logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n          const selectedIndex = copiedHistoryList.map((item) => item[this.searchKeyword]).indexOf(selected[this.searchKeyword]);\n          copiedHistoryList.splice(selectedIndex, 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        } else {\n          // string logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n          copiedHistoryList.splice(this.historyList.indexOf(selected), 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Save item in localStorage\n   * @param selected\n   */\n  saveHistoryToLocalStorage(selected) {\n    window.localStorage.setItem(\n      `${this.historyIdentifier}`,\n      JSON.stringify(selected)\n    );\n  }\n\n  /**\n   * Remove item from localStorage\n   * @param index\n   * @param e event\n   */\n  removeHistoryItem(index, e) {\n    e.stopPropagation();\n    this.historyList = this.historyList.filter((v, i) => i !== index);\n    this.saveHistoryToLocalStorage(this.historyList);\n    if (this.historyList.length == 0) {\n      window.localStorage.removeItem(`${this.historyIdentifier}`);\n      this.filterList();\n    }\n  }\n\n  /**\n   * Reset localStorage\n   * @param e event\n   */\n  resetHistoryList(e) {\n    e.stopPropagation();\n    this.historyList = [];\n    window.localStorage.removeItem(`${this.historyIdentifier}`);\n    this.filterList();\n  }\n}\n\n@Pipe({name: 'highlight'})\nexport class HighlightPipe implements PipeTransform {\n  transform(text: any, search: any, searchKeyword?: any): any {\n    let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    pattern = pattern.split(' ').filter((t) => {\n      return t.length > 0;\n    }).join('|');\n    const regex = new RegExp(pattern, 'gi');\n\n    if (!search) {\n      return text;\n    }\n\n    if (searchKeyword) {\n      const name = text[searchKeyword].replace(regex, (match) => `<b>${match}</b>`);\n      // copy original object\n      const text2 = {...text};\n      // set bold value into searchKeyword of copied object\n      text2[searchKeyword] = name;\n      return text2;\n    } else {\n      return search ? text.replace(regex, (match) => `<b>${match}</b>`) : text;\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {AutocompleteLibComponent} from './autocomplete-lib.component';\nimport {AutocompleteComponent, HighlightPipe} from './autocomplete/autocomplete.component';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [AutocompleteLibComponent, AutocompleteComponent, HighlightPipe],\n  exports: [AutocompleteLibComponent, AutocompleteComponent]\n})\nexport class AutocompleteLibModule {\n}\n"]}